{"version":3,"sources":["constants/config.js","until/callAPI.js","components/confirmDialog/index.js","components/snackbar/index.js","pages/BoardPage/boardItem/index.js","pages/BoardPage/inputBoard/index.js","pages/BoardPage/boardList/index.js","components/header/index.js","until/callAuth.js","pages/BoardPage/index.js","pages/BoardDetailPage/taskItem/index.js","pages/BoardDetailPage/inputTask/index.js","pages/BoardDetailPage/columnItem/index.js","pages/BoardDetailPage/columnList/index.js","pages/BoardDetailPage/taskList/index.js","pages/BoardDetailPage/boardHeader/index.js","pages/BoardDetailPage/index.js","pages/LoginPage/index.js","pages/SignUpPage/index.js","pages/AccountView/Profile/index.js","pages/AccountView/ProfileDetail/index.js","pages/AccountView/UpdateProfile/index.js","pages/AccountView/ChangePassword/index.js","pages/AccountView/Tags/index.js","pages/AccountView/index.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","callApi","endpoint","method","body","axios","url","Config","data","catch","err","PaperComponent","props","handle","cancel","Paper","ConfirmDialog","title","content","onChoose","useState","open","setOpen","useEffect","Dialog","onClose","aria-labelledby","DialogTitle","style","cursor","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","onClick","color","Alert","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","reset","type","message","classes","React","isOpen","setIsOpen","handleClose","event","reason","className","Snackbar","autoHideDuration","severity","BoardItem","taskNumber","setTaskNumber","copied","setCopied","isSubmit","setIsSubmit","APICaller","then","res","length","day","Date","value","onDelete","Card","border","CardActionArea","to","process","textDecoration","CardContent","Typography","gutterBottom","component","name","Grid","container","justify","item","getDate","getMonth","getFullYear","CardActions","text","onCopy","size","onChangeDelete","InputBoard","textField","setTextField","success","setSuccess","fullWidth","height","disableBackdropClick","TextField","margin","label","onChange","target","user","userID","onReset","BoardList","boards","setBoards","isReset","setIsReset","isDelete","setIsDelete","handleDelete","changeDelete","md","xs","Box","mr","mt","map","board","_id","date","flexGrow","Header","anchorEl","setAnchorEl","Boolean","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","pathname","state","localStorage","setItem","callAuthenticationAPI","contentHeader","get","headers","BoardPage","isLogin","setIsLogin","isAuth","setIsAuth","setUserID","Authorization","JSON","parse","getItem","userId","console","log","TaskItem","isEdit","setIsEdit","taskInfor","description","setContent","newBorder","background","handleClick","onDeleteTask","onRealTime","handleEditClick","noValidate","autoComplete","backgroundColor","onEditTask","draggableId","taskID","index","isDragDisabled","canDrag","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","padding","filter","direction","alignItems","disabled","InputTask","newTask","onCloseInputTask","onAddNewTask","display","load","marginLeft","ColumnItem","tasks","setTasks","indexAddColumn","setIndex","square","infor","align","columnType","mb","boardID","droppableId","String","isDraggingOver","task","dex","placeholder","socket","io","top","left","zIndex","ColumnList","datas","setDatas","error","setError","setCanDrag","isLoad","setIsLoad","isExist","setIsExist","realtime","setRealTime","a","columns","emit","on","result","column","matchTasks","sort","b","fetchData","setTimeout","handleAddNewTask","copiedData","splice","handleDeteleTask","copiedResult","i","handleEditTask","taskEdit","newContent","handleRealTime","CircularProgress","opacity","onDragEnd","source","destination","copiedDatas","Number","removed","columnSource","columnDestination","indexSource","indexDestination","TaskList","BoardHeader","boardName","setBoardName","setText","callAPI","handleOpenEditBoardName","BoardDetail","setID","location","URLSearchParams","search","paper","flexDirection","avatar","palette","secondary","main","form","submit","button","SignIn","setisLogin","email","password","setUser","handleChange","Container","maxWidth","CssBaseline","Avatar","required","FormControlLabel","control","Checkbox","preventDefault","stringify","access_token","appId","autoLoad","callback","response","status","accessToken","render","renderProps","startIcon","clientId","buttonText","onSuccess","tokenId","onFailure","cookiePolicy","SignUp","firstName","lastName","confirmPassword","agreeTerm","acount","setAcount","checked","onSubmit","sm","fontStyle","fontSize","Profile","dateText","Divider","ProfileDetails","CardHeader","helperText","phone","UpdateProfile","values","setValues","subheader","justifyContent","p","ChangePassword","oldPassword","newPassword","tabs","borderRight","divider","VerticalTabs","setValue","Tabs","orientation","newValue","onChangeValue","Tab","maxwidth","TabPanel","children","other","role","hidden","Account","setReset","lg","ProfileDetail","routes","path","exact","App","basename","route","showContentMenus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc1dfc00.chunk.js","sourcesContent":["export const API_URL = 'https://retro-spective-middleterm.herokuapp.com'\r\n","import axios from 'axios';\r\nimport * as Config from '../constants/config'\r\n\r\nconst callApi = (endpoint, method = 'GET', body) => {\r\n    return axios({\r\n        method: method,\r\n        url: Config.API_URL + '/' + endpoint,\r\n        data: body\r\n    }).catch(err => {\r\n        throw err;\r\n    });\r\n}\r\n\r\nexport default callApi;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default function ConfirmDialog({ title, content, onChoose }) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, [onChoose])\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperComponent={PaperComponent}\r\n        aria-labelledby=\"draggable-dialog-title\"\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          {title}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={() => { setOpen(false); onChoose(false); }} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => { setOpen(false); onChoose(true); }} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({ reset, open, type, message }) {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = React.useState(open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open);\r\n  }, [open, reset])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={type}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\nimport ConfirmDialog from './../../../components/confirmDialog/index';\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\n\r\nconst BoardItem = (props) => {\r\n\r\n    const [taskNumber, setTaskNumber] = useState(0);\r\n    const [copied, setCopied] = useState(null);\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        APICaller('tasks/board?id=' + props.id, 'GET', null).then(res => {\r\n            setTaskNumber(res.data.length);\r\n        });\r\n    }, [props.id]);\r\n    const day = new Date(props.day);\r\n\r\n    const handleChoose = (value) => {\r\n        if (value) {\r\n            APICaller('boards/' + props.id, 'DELETE', null).then(res => {\r\n                props.onDelete();\r\n                setIsSubmit(false);\r\n            });\r\n\r\n        }\r\n        setIsSubmit(false);\r\n    }\r\n\r\n    const handleClickToDelete = () => {\r\n        props.onChangeDelete();\r\n        setIsSubmit(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isSubmit ? <ConfirmDialog title=\"Delete board\" content=\"Do you want to delete this board?\" onChoose={handleChoose} /> : <></>}\r\n            {copied === true ? <CustomizedSnackbars open={true} type=\"success\" message=\"Copied\" /> : <></>}\r\n            {copied === false ? <CustomizedSnackbars open={true} type=\"success\" message=\"Copied\" /> : <></>}\r\n            <Card style={{ border: \"1px solid black\" }}>\r\n                <CardActionArea>\r\n                    <Link to={process.env.PUBLIC_URL + '/boards?id=' + props.id} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                        <CardContent >\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                {props.name}\r\n                            </Typography>\r\n                            <Grid container justify=\"space-between\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {day.getDate() + \"/\" + (day.getMonth() + 1) + \"/\" + day.getFullYear()}\r\n\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {taskNumber} tasks\r\n                                </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Link>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Grid container justify=\"space-between\">\r\n                        <Grid item>\r\n                            <CopyToClipboard text={props.url} onCopy={() => { setCopied(!copied) }}>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    URL\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button size=\"small\" color=\"primary\" onClick={handleClickToDelete}>\r\n                                Delete\r\n                        </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card >\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BoardItem;","import { useState } from 'react';\r\nimport { Button, Dialog, DialogTitle, DialogContent, TextField, DialogActions } from '@material-ui/core';\r\n\r\nimport APICaller from '../../../until/callAPI'\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\nconst InputBoard = (props) => {\r\n    const [textField, setTextField] = useState(\"\");\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        setSuccess(false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleClick = (event) => {\r\n        if (textField !== \"\") {\r\n            APICaller(\"boards\", \"POST\", {\r\n                name: textField,\r\n                user: props.userID\r\n            }).then(res => {props.onReset(); setSuccess(true)})\r\n\r\n            setTextField(\"\")\r\n            setOpen(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setTextField(value);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? <CustomizedSnackbars open={true} type=\"success\" message=\"Thêm thành công\" /> : <></>}\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} fullWidth={true} style={{ height: \"150px\" }}>\r\n                Add Board\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick = {true}>\r\n                \r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board Name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={textField}\r\n                        onChange={handleChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                            </Button>\r\n                    <Button onClick={handleClick} color=\"primary\">\r\n                        Subscribe\r\n                            </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputBoard;","import React, { useState, useEffect } from 'react';\r\nimport BoardItem from './../boardItem/index'\r\nimport { Grid, Box } from '@material-ui/core';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\nimport InputBoard from '../inputBoard/index'\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\n\r\n\r\nconst BoardList = (props) => {\r\n    const [boards, setBoards] = useState([]);\r\n    const [isReset, setIsReset] = useState(false);\r\n    const [isDelete, setIsDelete] = useState(false);\r\n\r\n    useEffect(() => {\r\n        APICaller('boards/user/' + props.userID, 'GET', null).then(res => {\r\n            setBoards(res.data)\r\n        });\r\n    }, [isReset, props.userID]);\r\n\r\n\r\n    const handleReset = () => {\r\n        setIsReset(!isReset)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setIsReset(!isReset)\r\n        setIsDelete(true)\r\n    }\r\n\r\n    const changeDelete = () => {\r\n        setIsDelete(false)\r\n    }\r\n\r\n    const createBoardList = () => {\r\n        return (\r\n            boards.map(board => {\r\n                return (\r\n                    <Grid item md={2} xs={12} key={board._id}>\r\n                        <Box mr={2} mt={2}>\r\n                            <BoardItem name={board.name} id={board._id} day={board.date} url={board.url} onDelete={handleDelete} onChangeDelete={changeDelete} />\r\n                        </Box>\r\n                    </Grid>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: \"10px\" }}>\r\n            {isDelete ? <CustomizedSnackbars open={true} type=\"success\" message=\"Successfully deleted the board\" /> : <></>}\r\n\r\n            <h1>Board List</h1>\r\n            <Grid container>\r\n                <Grid item md={2} xs={12}>\r\n                    <Box mr={2} mt={2}>\r\n                        <InputBoard onReset={handleReset} userID={props.userID} />\r\n                    </Box>\r\n                </Grid>\r\n                {createBoardList()}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardList;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.setItem('token', null);\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Link to={process.env.PUBLIC_URL + '/'} style={{ textDecoration: \"none\", color: \"white\" }}>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                            <GroupIcon />\r\n                        </IconButton>\r\n                    </Link>\r\n\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Retrospective\r\n                    </Typography>\r\n                    {\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n\r\n                                <Link to={process.env.PUBLIC_URL + '/profile'} style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                                    <MenuItem >Profile</MenuItem>\r\n                                </Link>\r\n                                <Link to={{\r\n                                    pathname: '/login',\r\n                                    state: {\r\n                                        type: 'success',\r\n                                        message: \"Successfully logged out!\",\r\n                                        open: true\r\n                                    }\r\n                                }}\r\n                                    style={{ textDecoration: \"none\", color: \"black\" }}>\r\n                                    <MenuItem onClick={handleLogout}>Log out</MenuItem>\r\n                                </Link>\r\n                            </Menu>\r\n                        </div>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\nimport * as Config from '../constants/config'\r\n\r\nconst callAuthenticationAPI = (endpoint, contentHeader) => {\r\n    return axios.get(Config.API_URL + '/' + endpoint, {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + contentHeader\r\n        }\r\n    });\r\n}\r\n\r\nexport default callAuthenticationAPI;","import { useEffect, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport BoardList from './boardList/index'\r\nimport Header from './../../components/header/index'\r\nimport Authorization from './../../until/callAuth'\r\n\r\nconst BoardPage = () => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const [userID, setUserID] = useState(false);\r\n    useEffect(() => {\r\n        Authorization('profile', JSON.parse(localStorage.getItem('token')))\r\n            .then(res => { setUserID(res.data.userId); setIsLogin(true); setIsAuth(true) })\r\n            .catch(err => { console.log(\"Lỗi\"); setIsLogin(false); setIsAuth(true) })\r\n    }, []);\r\n\r\n    if (!isAuth) return <></>;\r\n\r\n    if (!isLogin) return <Redirect to={{\r\n        pathname: process.env.PUBLIC_URL + '/login',\r\n        state: {\r\n            type: 'error',\r\n            message: \"You must login!\",\r\n            open: true\r\n        }\r\n    }} />\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <BoardList userID={userID} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BoardPage;","import { useState, useEffect } from 'react';\r\nimport { IconButton, Grid, TextField, Button } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, color) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: 5,\r\n    margin: `0 0 ${8}px 0`,\r\n\r\n    // change background colour if dragging\r\n    backgroundColor: color,\r\n    filter: isDragging ? 'brightness(2)' : 'brightness(1)',\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle\r\n});\r\n\r\nconst TaskItem = (props) => {\r\n\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [content, setContent] = useState(props.taskInfor.description);\r\n    const newBorder = \"5px solid \" + props.background;\r\n\r\n    useEffect(() => {\r\n        setContent(props.taskInfor.description);\r\n        setIsEdit(false);\r\n    }, [props.taskInfor.description]);\r\n\r\n    const handleClick = () => {\r\n\r\n        props.onDeleteTask(props.taskInfor);\r\n        APICaller('tasks/' + props.taskInfor._id, 'DELETE', null).then(res => props.onRealTime());\r\n    }\r\n\r\n    const handleEditClick = () => {\r\n        setIsEdit(true);\r\n    }\r\n\r\n    const handleDoEditTask = () => {\r\n        props.onEditTask(props.taskInfor, content);\r\n        setIsEdit(false);\r\n\r\n        APICaller('tasks/edit/' + props.taskInfor._id, 'POST', {\r\n            description: content\r\n        }).then(res => props.onRealTime())\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setContent(event.target.value);\r\n    }\r\n\r\n    if (isEdit) return (\r\n        <Grid container justify=\"center\" style={{ border: newBorder }} >\r\n            <Grid item xs={11} >\r\n                <form noValidate autoComplete=\"off\"  >\r\n                    <TextField id=\"textField\" value={content} label=\"Description\" variant=\"outlined\" size=\"small\" fullWidth style={{ marginTop: \"5px\" }} onChange={handleChange} />\r\n                </form>\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n                <Grid container justify=\"space-between\" style={{ margin: \"4px\" }}>\r\n                    <Grid item  >\r\n                        <Button variant=\"contained\" size=\"small\" style={{ margin: \"2px\", backgroundColor: \"#76ff03\" }} onClick={handleDoEditTask}>\r\n                            Done\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton component=\"span\" size=\"small\" style={{ margin: \"2px\" }} onClick={handleClick}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n\r\n    return (\r\n        <Draggable\r\n            key={props.taskID}\r\n            draggableId={props.taskID}\r\n            index={props.index}\r\n            isDragDisabled={!props.canDrag}\r\n\r\n        >\r\n            {(provided, snapshot) => (\r\n                <Grid container ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style,\r\n                        props.background\r\n                    )}\r\n                >\r\n                    <Grid item >\r\n                        {props.taskInfor.description}\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"baseline\" >\r\n                        <Grid item>\r\n                            <IconButton component=\"span\" size=\"small\" onClick={handleEditClick} disabled={!props.canDrag}>\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <IconButton component=\"span\" size=\"small\" onClick={handleClick} disabled={!props.canDrag}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid >\r\n            )\r\n            }\r\n        </Draggable >\r\n    )\r\n}\r\n\r\nexport default TaskItem;","import { useState } from 'react';\r\nimport {\r\n    Button,\r\n    IconButton,\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport APICaller from './../../../until/callAPI'\r\n\r\nconst InputTask = (props) => {\r\n    const newBorder = \"5px solid \" + props.color;\r\n    const [textField, setTextField] = useState(\"\");\r\n\r\n    const handleClick = (event) => {\r\n        if (textField !== \"\") {\r\n            const newTask = {\r\n                _id: props.board + props.size + props.value + \"fake\",\r\n                board: props.board,\r\n                description: textField,\r\n                index: props.size,\r\n                type: props.value\r\n            }\r\n            props.onCloseInputTask();\r\n\r\n            setTextField(\"\")\r\n            props.onAddNewTask(newTask)\r\n\r\n            APICaller(\"tasks\", \"POST\", {\r\n                type: props.value,\r\n                description: textField,\r\n                board: props.board\r\n            })\r\n                .then(res => {\r\n                    props.onRealTime();\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setTextField(value);\r\n\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{ border: newBorder }} >\r\n            <Grid item xs={11} >\r\n                <form noValidate autoComplete=\"off\"  >\r\n                    <TextField id=\"textField\" value={textField} onChange={handleChange} label=\"Description\" variant=\"outlined\" size=\"small\" fullWidth style={{ marginTop: \"5px\" }} />\r\n                </form>\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n                <Grid container justify=\"space-between\" style={{ margin: \"4px\" }}>\r\n                    <Grid item  >\r\n                        <Button variant=\"contained\" size=\"small\" style={{ margin: \"2px\", backgroundColor: \"#76ff03\" }} onClick={handleClick}>\r\n                            Add\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <IconButton component=\"span\" size=\"small\" style={{ margin: \"2px\" }} onClick={() => props.onCloseInputTask()}>\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default InputTask;","import { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Box,\r\n    Grid,\r\n    Paper,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\n\r\nimport TaskItem from './../taskItem/index'\r\nimport InputTask from './../inputTask/index'\r\n\r\n\r\nconst getListStyle = (isDraggingOver, color) => ({\r\n    background: isDraggingOver ? 'dark' + color : \"\",\r\n    padding: '8px 0px',\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            width: theme.spacing(2),\r\n            height: theme.spacing(2),\r\n        },\r\n    },\r\n    load: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst ColumnItem = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    const [indexAddColumn, setIndex] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        setTasks(props.tasks);\r\n    }, [props.tasks]);\r\n\r\n    const handleClickAdd = (value) => {\r\n        if (value === indexAddColumn) {\r\n            setIndex(-1);\r\n        } else {\r\n            setIndex(value);\r\n        }\r\n    }\r\n\r\n    const handleCloseInputTask = () => {\r\n        setIndex(-1);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Grid item md={4} xs={12} >\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Box className={classes.root}>\r\n                            <Paper variant=\"outlined\" square style={{ background: props.infor.color }} />\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography align=\"center\" variant=\"h6\" style={{ margin: \"0px 8px\" }} >{props.infor.label}</Typography >\r\n                    </Grid>\r\n                </Grid>\r\n                <Button variant=\"contained\" fullWidth={true} onClick={() => handleClickAdd(props.columnType)} disabled={!props.canDrag}><AddIcon /></Button>\r\n                {indexAddColumn === props.infor.value ?\r\n                    <Box mt={2} mb={2} >\r\n                        <InputTask color={props.infor.color} value={props.infor.value} onCloseInputTask={handleCloseInputTask} board={props.boardID} size={tasks.length} onAddNewTask={props.onAddNewTask} onRealTime={props.onRealTime} />\r\n                    </Box> : \"\"}\r\n\r\n                <Droppable droppableId={String(props.columnType)} >\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver, props.infor.color)}>\r\n                            {tasks.map((task, dex) => {\r\n                                return (\r\n                                    <Box mt={2} mb={2} key={dex}>\r\n                                        <TaskItem index={dex} taskInfor={task}\r\n                                            background={props.infor.color}\r\n                                            taskID={task._id}\r\n                                            onDeleteTask={props.onDeleteTask}\r\n                                            onEditTask={props.onEditTask}\r\n                                            canDrag={props.canDrag}\r\n                                            onRealTime={props.onRealTime} />\r\n                                    </Box>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>)}\r\n                </Droppable>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ColumnItem;\r\n","import { useEffect, useState } from 'react';\r\nimport { Grid, CircularProgress, makeStyles } from '@material-ui/core';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\n\r\nimport ColumnItem from './../columnItem/index'\r\nimport APICaller from './../../../until/callAPI'\r\nimport io from \"socket.io-client\";\r\nimport * as Config from './../../../constants/config'\r\n\r\n\r\nconst socket = io(Config.API_URL);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    load: {\r\n        position: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        zIndex: '100000'\r\n    },\r\n}));\r\n\r\nconst ColumnList = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [datas, setDatas] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [canDrag, setCanDrag] = useState(true);\r\n    const [isLoad, setIsLoad] = useState(true);\r\n    const [isExist, setIsExist] = useState(true);\r\n    const [realtime, setRealTime] = useState(true);\r\n\r\n    useEffect(() => {\r\n        APICaller('boards/' + props.boardID, 'GET', null).then(res => {\r\n            if (!res.data) {\r\n                setIsExist(false);\r\n                return;\r\n            }\r\n        });\r\n    }, [props.boardID]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const columns = (await APICaller('columns', 'GET', null)).data;\r\n            await socket.emit('msgToServer', props.boardID);\r\n            socket.on('msgToClient', tasks => {\r\n                console.log(\"vo\")\r\n                const result = columns.map(column => {\r\n                    const matchTasks = (tasks.filter(task => task.type === column.value)).sort((a, b) => a.index - b.index);\r\n                    return {\r\n                        column,\r\n                        tasks: matchTasks\r\n                    }\r\n                })\r\n                setDatas(result);\r\n            });\r\n            setIsLoad(false);\r\n            setCanDrag(true);\r\n        }\r\n\r\n        fetchData();\r\n        if (error === true) {\r\n            setTimeout(() => setError(false), 3000);\r\n        }\r\n\r\n    }, [realtime, props.boardID, error]);\r\n\r\n    const handleAddNewTask = (task) => {\r\n        console.log(task)\r\n        const copiedData = datas.map(data => {\r\n            if (data.column.value === task.type) {\r\n                data.tasks.splice(task.index, 0, task);\r\n            }\r\n            return data;\r\n        });\r\n\r\n        setDatas(copiedData);\r\n        setCanDrag(false);\r\n        setIsLoad(true);\r\n    }\r\n\r\n    const handleDeteleTask = (task) => {\r\n        const copiedResult = datas.map(data => {\r\n            if (data.column.value === task.type) {\r\n                data.tasks.splice(task.index, 1);\r\n\r\n                for (let i = task.index; i < data.tasks.length; i++) {\r\n                    data.tasks[i].index = i;\r\n                }\r\n            }\r\n            return data;\r\n        })\r\n\r\n        setDatas(copiedResult);\r\n        setCanDrag(false);\r\n        setIsLoad(true);\r\n    }\r\n\r\n    const handleEditTask = (taskEdit, newContent) => {\r\n        const copiedResult = datas.map(data => {\r\n            data.tasks.map(task => {\r\n                if (task._id === taskEdit._id) {\r\n                    task.description = newContent;\r\n                }\r\n                return task;\r\n            })\r\n            return data;\r\n        })\r\n\r\n        setDatas(copiedResult);\r\n        setCanDrag(false);\r\n        setIsLoad(true);\r\n    }\r\n\r\n    const onDragEnd = result => {\r\n\r\n        const { source, destination } = result;\r\n\r\n        console.log(result)\r\n        if (destination === null) {\r\n            console.log(\"error\")\r\n            return;\r\n        }\r\n\r\n        setCanDrag(false);\r\n        setIsLoad(true);\r\n        if (source.droppableId !== destination.droppableId) {\r\n            const copiedDatas = [...datas];\r\n            const [removed] = copiedDatas[Number(source.droppableId)].tasks.splice(source.index, 1);\r\n            removed.type = Number(destination.droppableId);\r\n            for (let i = source.index; i < copiedDatas[Number(source.droppableId)].tasks.length; i++) {\r\n                copiedDatas[Number(source.droppableId)].tasks[i].index = i;\r\n            }\r\n            copiedDatas[Number(destination.droppableId)].tasks.splice(destination.index, 0, removed);\r\n            for (let i = destination.index; i < copiedDatas[Number(destination.droppableId)].tasks.length; i++) {\r\n                copiedDatas[Number(destination.droppableId)].tasks[i].index = i;\r\n            }\r\n\r\n            setDatas(copiedDatas);\r\n\r\n            APICaller('tasks/move', 'POST', {\r\n                boardID: props.boardID,\r\n                columnSource: Number(source.droppableId),\r\n                columnDestination: Number(destination.droppableId),\r\n                indexSource: source.index,\r\n                indexDestination: destination.index\r\n            })\r\n                .then(res => {\r\n                    setCanDrag(true);\r\n                    handleRealTime();\r\n                    setIsLoad(false);\r\n\r\n                })\r\n                .catch(err => {\r\n                    setRealTime(!realtime);\r\n                    setError(true)\r\n                    setIsLoad(false);\r\n                })\r\n\r\n        }\r\n        else {\r\n            const copiedDatas = datas.map(data => {\r\n                if (data.column.value === Number(source.droppableId)) {\r\n                    const result = [...data.tasks];\r\n                    const [removed] = result.splice(source.index, 1);\r\n                    result.splice(destination.index, 0, removed);\r\n\r\n                    const start = source.index > destination.index ? destination.index : source.index\r\n                    for (let i = start; i < result.length; i++) {\r\n                        result[i].index = i;\r\n                    }\r\n\r\n                    data.tasks = result;\r\n                }\r\n                return data;\r\n            });\r\n            setDatas(copiedDatas);\r\n\r\n            APICaller('tasks/reorder', 'POST', {\r\n                boardID: props.boardID,\r\n                column: Number(source.droppableId),\r\n                indexSource: source.index,\r\n                indexDestination: destination.index\r\n            })\r\n                .then(res => {\r\n                    setCanDrag(true);\r\n                    handleRealTime();\r\n                    setIsLoad(false);\r\n                })\r\n                .catch(err => {\r\n                    setRealTime(!realtime);\r\n                    setError(true)\r\n                    setIsLoad(false);\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const handleRealTime = () => {\r\n        setRealTime(!realtime)\r\n    }\r\n\r\n    if (!isExist) return (<h1>This board does not exist</h1>)\r\n    return (\r\n        <>\r\n            {\r\n                isLoad ?\r\n                    <div className={classes.load}>\r\n                        <CircularProgress color=\"secondary\" />\r\n                    </div>\r\n                    : <></>\r\n            }\r\n\r\n            <Grid container spacing={2} style={isLoad ? { opacity: '0.5' } : {}}>\r\n\r\n                {<CustomizedSnackbars open={error} type=\"error\" message=\"Bạn thao tác nhanh quá, tôi không xử lý kịp\" />}\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    {datas.map(data =>\r\n                        <ColumnItem infor={data.column} key={data.column._id}\r\n                            boardID={props.boardID} columnType={data.column.value}\r\n                            tasks={data.tasks} onAddNewTask={handleAddNewTask}\r\n                            onDeleteTask={handleDeteleTask}\r\n                            onEditTask={handleEditTask}\r\n                            onRealTime={handleRealTime}\r\n                            canDrag={canDrag} />\r\n                    )}\r\n                </DragDropContext>\r\n\r\n            </Grid></>\r\n    );\r\n}\r\n\r\nexport default ColumnList;\r\n","import { Box } from '@material-ui/core';\r\nimport ColumnList from '../columnList/index'\r\n\r\nconst TaskList = (props) => {\r\n\r\n    return (\r\n        <Box style={{ margin: \"16px\" }}>\r\n            <ColumnList boardID={props.boardID} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default TaskList;","import { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    IconButton,\r\n    TextField,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport callAPI from './../../../until/callAPI'\r\nconst BoardHeader = (props) => {\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        callAPI('boards/' + props.boardID, 'GET', null).then(res => {\r\n            setBoardName(res.data.name);\r\n            setText(res.data.name);\r\n        })\r\n    }, [props.boardID])\r\n\r\n    const handleOpenEditBoardName = () => {\r\n        setText(boardName);\r\n        setIsEdit(!isEdit)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (text !== \"\")\r\n            callAPI('boards/edit/' + props.boardID, 'POST', { name: text }).then(res => {\r\n                setIsEdit(false)\r\n                setBoardName(text)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" style={{ backgroundColor: \"white\" }}>\r\n            <Grid item style={{ margin: \"8px 16px\" }}>\r\n                <Grid container>\r\n                    {isEdit ?\r\n                        <>\r\n                            <Grid item>\r\n                                <TextField\r\n                                    id=\"outlined-textarea\"\r\n                                    label=\"Board Name\"\r\n                                    placeholder=\"Board Name\"\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    style={{ margin: \"-4px 0px\" }}\r\n                                    value={text}\r\n                                    onChange={(event) => setText(event.target.value)}\r\n\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" color=\"primary\" size=\"small\" style={{ margin: \"0px 20px\" }} onClick={handleClick}>\r\n                                    Save\r\n                            </Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button size=\"small\" onClick={handleOpenEditBoardName}>Cancel</Button>\r\n                            </Grid>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Grid item>\r\n                                <Typography variant=\"h6\">{boardName}</Typography>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <IconButton component=\"span\" size=\"small\" style={{ margin: \"0px 8px\" }} onClick={handleOpenEditBoardName}>\r\n                                    <EditIcon />\r\n                                </IconButton>\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default BoardHeader;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport TaskList from './taskList/index'\r\nimport Header from './../../components/header/index'\r\nimport BoardHeader from './boardHeader/index'\r\n\r\nconst BoardDetail = (props) => {\r\n    const [id, setID] = useState(null);\r\n    useEffect(() => {\r\n        if (props.location) {\r\n            setID(new URLSearchParams(props.location.search).get('id'));\r\n        }\r\n    }, [props.location]);\r\n\r\n    return (\r\n        <div >\r\n            <Header />\r\n            {id !== null ? <BoardHeader boardID={id} /> : \"\"}\r\n            {id !== null ? <TaskList boardID={id} /> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoardDetail;","import { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container } from '@material-ui/core';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\n\r\nimport axios from 'axios';\r\nimport * as Config from './../../constants/config'\r\nimport callAPI from './../../until/callAPI'\r\nimport CustomizedSnackbars from './../../components/snackbar/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n    const [isLogin, setisLogin] = useState(false);\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [error, setError] = useState(false);\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        setError(false);\r\n        callAPI('auth/login', 'POST', {\r\n            email: user.email,\r\n            password: user.password\r\n        }).then(res => {\r\n            localStorage.setItem('token', JSON.stringify(res.data.access_token));\r\n            setisLogin(true);\r\n        }).catch(err => {\r\n            setError(true);\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { target } = event;\r\n        const { name, value } = target;\r\n\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const responseGoogle = (response) => {\r\n        axios.get(Config.API_URL + '/google', {\r\n            headers: {\r\n                'Authorization': response.tokenId\r\n            }\r\n        }).then(res => {\r\n            localStorage.setItem('token', JSON.stringify(res.data.access_token));\r\n            setisLogin(true);\r\n        }).catch(err => {\r\n            setError(true);\r\n        })\r\n    }\r\n\r\n    const responseFacebook = (response) => {\r\n        if(response.status === \"unknown\")\r\n            return;\r\n        axios.get(Config.API_URL + '/facebook', {\r\n            headers: {\r\n                'accessToken': response.accessToken,\r\n                'userID': response.userID\r\n            }\r\n        }).then(res => {\r\n            localStorage.setItem('token', JSON.stringify(res.data.access_token));\r\n            setisLogin(true);\r\n        }).catch(err => {\r\n            setError(true);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    if (isLogin) return <Redirect to={process.env.PUBLIC_URL + '/'}></Redirect>\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\"  >\r\n            {props.location.state ? <CustomizedSnackbars open={props.location.state.open} type={props.location.state.type} message={props.location.state.message} /> : <></>}\r\n            {<CustomizedSnackbars open={error} type=\"error\" message=\"Wrong account or password\" />}\r\n            <CssBaseline />\r\n            <div className={classes.paper} >\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        value={user.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={user.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label=\"Remember me\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to='#' variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleClick}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n\r\n\r\n                </form>\r\n\r\n                <Typography component=\"p\" variant=\"h6\">\r\n                    Or login with\r\n                </Typography>\r\n\r\n                <Grid container justify=\"space-between\">\r\n                    <Grid item>\r\n\r\n                        <FacebookLogin\r\n                            appId=\"2654369511482506\"\r\n                            autoLoad={false}\r\n                            callback={responseFacebook}\r\n                            render={renderProps => (\r\n                                <Button\r\n                                    onClick={renderProps.onClick}\r\n                                    variant=\"contained\"\r\n                                    className={classes.button}\r\n                                    startIcon={<FacebookIcon style={{ color: \"blue\" }} />}\r\n                                    style={{ color: \"blue\" }}\r\n                                >\r\n                                    Facebook\r\n                                </Button>\r\n                            )}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <GoogleLogin\r\n                            clientId=\"384818698512-6un3oj0o5bvhpah1qcrkhcjctv2a6djl.apps.googleusercontent.com\"\r\n                            buttonText=\"Google\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={(res) => console.log(res)}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Link to={process.env.PUBLIC_URL + '/signup'} style={{ margin: \"24px 0px 0px 0px\", color: \"#3f51b5\" }}>\r\n                    {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n\r\n            </div>\r\n        </Container >\r\n\r\n    );\r\n}","import { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport callAPI from './../../until/callAPI'\r\nimport CustomizedSnackbars from './../../components/snackbar/index'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst SignUp = () => {\r\n    const classes = useStyles();\r\n    const [success, setSuccess] = useState(false);\r\n    const [error, setError] = useState({\r\n        value: false,\r\n        message: \"\"\r\n    });\r\n    const [acount, setAcount] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        agreeTerm: false,\r\n    });\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { target } = event;\r\n        const { name } = target;\r\n        const value = name === \"agreeTerm\" ? target.checked : target.value;\r\n        setAcount({\r\n            ...acount,\r\n            [name]: value\r\n        });\r\n\r\n        if (error.value) {\r\n            setError({\r\n                value: false,\r\n                message: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (acount.firstName === \"\" ||\r\n            acount.lastName === \"\" ||\r\n            acount.email === \"\" ||\r\n            acount.password === \"\" ||\r\n            acount.confirmPassword === \"\"\r\n        ) {\r\n            setError({\r\n                value: true,\r\n                message: \"You need to fill in all the details\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (acount.password.length < 8) {\r\n            setError({\r\n                value: true,\r\n                message: \"Your password should contain at least 8 chars\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!acount.agreeTerm) {\r\n            setError({\r\n                value: true,\r\n                message: \"You must agree with our Term\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (acount.password !== acount.confirmPassword) {\r\n            setError({\r\n                value: true,\r\n                message: \"Password and confirm password are identical\"\r\n            });\r\n            return;\r\n        }\r\n\r\n        callAPI('users', 'POST', {\r\n            firstName: acount.firstName,\r\n            lastName: acount.lastName,\r\n            email: acount.email,\r\n            password: acount.password\r\n        }).then(res => {\r\n            if (res.data.id === null) {\r\n                setError({\r\n                    value: true,\r\n                    message: \"Account already exists!\"\r\n                });\r\n            }\r\n            else\r\n                setSuccess(true)\r\n        });\r\n    }\r\n\r\n    if (success) return <Redirect to={{\r\n        pathname: process.env.PUBLIC_URL + '/login',\r\n        state: {\r\n            type: 'success',\r\n            message: \"Successful registration, login now!\",\r\n            open: true\r\n        }\r\n    }} />\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {<CustomizedSnackbars open={error.value} type=\"error\" message={error.message} />}\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                onChange={handleChange}\r\n                                value={acount.firstName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={handleChange}\r\n                                value={acount.lastName}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={handleChange}\r\n                                value={acount.email}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleChange}\r\n                                value={acount.password}\r\n                            />\r\n                            <p style={{ fontStyle: \"italic\", fontSize: \"80%\" }}> Should contain at least 8 chars!</p>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={handleChange}\r\n                                value={acount.confirmPassword}\r\n                            />\r\n                            <p style={{ fontStyle: \"italic\", fontSize: \"80%\" }}> Should contain at least 8 chars!</p>\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox name=\"agreeTerm\" checked={acount.agreeTerm} onChange={handleChange} color=\"primary\" />}\r\n                                label=\"By signing up you agree to our Terms and Privacy Policy\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to={process.env.PUBLIC_URL + '/login'} style={{ margin: \"24px 0px 0px 0px\", color: \"#3f51b5\" }}>\r\n                                Already have an account? Sign in\r\n                             </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ user }) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.firstName + \" \" + user.lastName}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {user.email}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\n\n\nexport default Profile;\n","import React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n} from '@material-ui/core';\n\n\nconst ProfileDetails = ({ user }) => {\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n\n    >\n      <Card>\n        <CardHeader\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                required\n                value={user.firstName}\n                variant=\"outlined\"\n                disabled={true}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                required\n                value={user.lastName}\n                variant=\"outlined\"\n                disabled={true}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                required\n                value={user.email}\n                variant=\"outlined\"\n                disabled={true}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                type=\"number\"\n                value={user.phone}\n                variant=\"outlined\"\n                disabled={true}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </form>\n  );\n};\n\n\nexport default ProfileDetails;\n","import React, { useState, useEffect } from 'react';\n\nimport APICaller from '../../../until/callAPI'\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nimport ConfirmDialog from './../../../components/confirmDialog/index'\nimport CustomizedSnackbars from './../../../components/snackbar/index'\n\nconst UpdateProfile = ({ user, onReset }) => {\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  });\n\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    setValues({\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      phone: user.phone\n    })\n  }, [user]);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSuccess(false);\n    setIsSubmit(true);\n  }\n\n  const handleChoose = (value) => {\n    if (value) {\n      APICaller('users/edit/' + user._id, 'POST', values)\n        .then(res => {\n          setIsSubmit(false);\n          setSuccess(true);\n          onReset()\n        });\n    }\n    else {\n      setIsSubmit(false);\n    }\n  }\n  return (\n    <>\n      {isSubmit ? <ConfirmDialog title=\"Change Information\" content=\"Do you want to change these informations?\" onChoose={handleChoose} /> : <></>}\n      {success ? <CustomizedSnackbars open={true} type=\"success\" message=\"successful change\" /> : <></>}\n      <form\n        autoComplete=\"off\"\n        noValidate\n      >\n        <Card>\n          <CardHeader\n            title=\"Update Information\"\n            subheader=\"The information can be edited\"\n\n          />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  helperText=\"Please specify the first name\"\n                  label=\"First name\"\n                  name=\"firstName\"\n                  onChange={handleChange}\n                  required\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Last name\"\n                  name=\"lastName\"\n                  onChange={handleChange}\n                  required\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Email Address\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  required\n                  value={values.email}\n                  variant=\"outlined\"\n                  disabled={true}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Phone Number\"\n                  name=\"phone\"\n                  onChange={handleChange}\n                  type=\"number\"\n                  value={values.phone}\n                  variant=\"outlined\"\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n          >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Save details\n          </Button>\n          </Box>\n        </Card>\n      </form>\n    </>\n  );\n};\n\nexport default UpdateProfile;\n","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n    Box,\r\n    Button\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport APICaller from '../../../until/callAPI'\r\nimport ConfirmDialog from './../../../components/confirmDialog/index'\r\nimport CustomizedSnackbars from './../../../components/snackbar/index'\r\n\r\nconst ChangePassword = ({ user }) => {\r\n    const [values, setValues] = useState({\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\"\r\n    });\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [error, setError] = useState({\r\n        value: false,\r\n        message: \"\"\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setValues({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setSuccess(false);\r\n        setIsSubmit(true);\r\n        setError({\r\n            value: false,\r\n            message: \"\"\r\n        });\r\n    }\r\n\r\n    const handleChoose = (value) => {\r\n        if (value) {\r\n            if(values.oldPassword === \"\"||values.confirmPassword === \"\"||values.newPassword === \"\")\r\n            {\r\n                setError({\r\n                    value: true,\r\n                    message: \"You need to fill in all the details\"\r\n                });\r\n                setIsSubmit(false);\r\n                return;\r\n            }\r\n\r\n            if(values.newPassword.length < 8){\r\n                setError({\r\n                    value: true,\r\n                    message: \"Your new password should contain at least 8 chars\"\r\n                });\r\n                setIsSubmit(false);\r\n                return;\r\n            }\r\n            if (values.newPassword !== values.confirmPassword) {\r\n                setError({\r\n                    value: true,\r\n                    message: \"Password and confirm password are identical\"\r\n                });\r\n                setIsSubmit(false);\r\n                return;\r\n            }\r\n\r\n            APICaller('users/change-password/' + user._id, 'POST', {\r\n                oldPassword: values.oldPassword,\r\n                newPassword: values.newPassword\r\n            }).then(res => {\r\n                if (res.data) {\r\n                    setSuccess(true);\r\n                    setIsSubmit(false);\r\n                } else {\r\n                    setError({\r\n                        value: true,\r\n                        message: \"Old password is invalid\"\r\n                    });\r\n                }\r\n            })\r\n\r\n            setIsSubmit(false);\r\n        }\r\n        else {\r\n            setIsSubmit(false);\r\n        }\r\n\r\n    }\r\n\r\n    if (success) return <Redirect to={{\r\n        pathname: process.env.PUBLIC_URL +'/login',\r\n        state: {\r\n            type: 'success',\r\n            message: \"Password changed successfully, please log in again!\",\r\n            open: true,\r\n        }\r\n    }} />\r\n\r\n\r\n    return (\r\n        <>\r\n            {isSubmit ? <ConfirmDialog title=\"Change Information\" content=\"Do you want to change these informations?\" onChoose={handleChoose} /> : <></>}\r\n            {error.value ? <CustomizedSnackbars open={true} type=\"error\" message={error.message} /> : <></>}\r\n\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n\r\n            >\r\n                <Card>\r\n                    <CardHeader\r\n                        title=\"Change Password\"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <Grid\r\n                            container\r\n                            spacing={3}\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    helperText=\"Should contain at least 8 chars!\"\r\n                                    label=\"Old Password\"\r\n                                    name=\"oldPassword\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    value={values.oldPassword}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                            ></Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    helperText=\"Should contain at least 8 chars!\"\r\n                                    label=\"New Password\"\r\n                                    name=\"newPassword\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    value={values.newPassword}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                            ></Grid>\r\n                            <Grid\r\n                                item\r\n                                md={6}\r\n                                xs={12}\r\n                            >\r\n                                <TextField\r\n                                    fullWidth\r\n                                    helperText=\"Should contain at least 8 chars!\"\r\n                                    label=\"Confirm Password\"\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    value={values.confirmPassword}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                            ></Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                    <Divider />\r\n                    <Box\r\n                        display=\"flex\"\r\n                        justifyContent=\"flex-end\"\r\n                        p={2}\r\n                    >\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Save Password\r\n                </Button>\r\n                    </Box>\r\n                </Card>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default ChangePassword;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Tabs, Card, CardContent, Box } from '@material-ui/core';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n}));\r\n\r\nexport default function VerticalTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        props.onChangeValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box mt={5}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Tabs\r\n                        orientation=\"vertical\"\r\n                        value={value}\r\n                        variant=\"fullWidth\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"Vertical tabs example\"\r\n                        className={classes.tabs}\r\n                    >\r\n                        <Tab label=\"Profile\" maxwidth=\"true\" />\r\n                        <Tab label=\"Update Information\" maxwidth=\"true\" />\r\n                        <Tab label=\"Change Password\" maxwidth=\"true\" />\r\n                    </Tabs>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  Box\n} from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\n\nimport Profile from './Profile/index';\nimport ProfileDetails from './ProfileDetail/index';\nimport UpdateProfile from './UpdateProfile/index'\nimport ChangePassword from './ChangePassword/index'\nimport VerticalTabs from './Tags/index'\nimport Header from './../../components/header'\nimport Authorization from './../../until/callAuth'\nimport APICaller from './../../until/callAPI';\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Box\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <div>{children}</div>\n      )}\n    </Box>\n  );\n}\n\nconst Account = () => {\n  const [value, setValue] = useState(0);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isAuth, setIsAuth] = useState(false);\n  const [user, setUser] = useState(null);\n  const [reset, setReset] = useState(false);\n\n  useEffect(() => {\n    Authorization('profile', JSON.parse(localStorage.getItem('token')))\n      .then(res => {\n        APICaller('users/' + res.data.userId, 'GET', null).then(result => {\n          setUser(result.data);\n          setIsLogin(true);\n          setIsAuth(true);\n        })\n      })\n      .catch(err => { setIsLogin(false); setIsAuth(true) })\n  }, [reset]);\n\n  const handleChangeValue = (newValue) => {\n    setValue(newValue);\n  }\n\n  const handleReset = () => {\n    setReset(!reset);\n  }\n\n  if (!isAuth) return <></>;\n\n  if (!isLogin) return <Redirect to={{\n    pathname: process.env.PUBLIC_URL + '/login',\n    state: {\n      type: 'error',\n      message: \"You must login!\",\n      open: true\n    }\n  }} />\n\n  return (\n    <>\n      <Header />\n      <Container maxWidth=\"lg\" style={{ marginTop: \"48px\" }}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile user={user} />\n            <VerticalTabs onChangeValue={handleChangeValue} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n\n            <TabPanel value={value} index={0}>\n              <ProfileDetails user={user} />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <UpdateProfile user={user} onReset={handleReset} />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              <ChangePassword user={user} />\n            </TabPanel>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Account;\n","import React from 'react';\r\nimport BoardPage from './pages/BoardPage/index';\r\nimport BoardDetail from './pages/BoardDetailPage/index'\r\nimport SignIn from './pages/LoginPage/index'\r\nimport SignUp from './pages/SignUpPage/index'\r\nimport Account from './pages/AccountView/index'\r\nconst routes = [\r\n    {\r\n        path:  process.env.PUBLIC_URL +'/',\r\n        exact: true,\r\n        main: () => <BoardPage />\r\n    },\r\n    {\r\n        path:  process.env.PUBLIC_URL +'/login',\r\n        exact: true,\r\n        main: ({ location }) => <SignIn location={location} />\r\n    },\r\n    {\r\n        path:  process.env.PUBLIC_URL+'/signup',\r\n        exact: true,\r\n        main: () => <SignUp />\r\n    },\r\n    {\r\n        path: process.env.PUBLIC_URL+  '/profile',\r\n        exact: true,\r\n        main: () => <Account />\r\n    },\r\n    {\r\n        path:  process.env.PUBLIC_URL+ '/boards',\r\n        exact: true,\r\n        main: ({ location }) => <BoardDetail location={location} />\r\n    },\r\n    {\r\n        path: '',\r\n        exact: false,\r\n        main: () => <BoardPage />\r\n    }\r\n]\r\n\r\nexport default routes;","import './App.css';\nimport routes from './routes';\nimport { Switch, HashRouter as Router, Route } from 'react-router-dom'\n\nconst App = () => {\n\n\n\n  const showContentMenus = (routes) => {\n    let result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return <Route key={index}\n          path={route.path}\n          exact={route.exact}\n          component={route.main} />\n      })\n    }\n    return result\n  }\n\n  return (\n    <Router basename = '/final'>\n      <Switch>\n        {showContentMenus(routes)}\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}